# sustainable value
dt_ap[,sus_val:= cut(sus_val,3,include.lowest=TRUE,
labels=c("Low", "Middle", "High"))]
# aesthetic values
dt_ap[,aes_val:= cut(aes_val,3,include.lowest=TRUE,
labels=c("Low", "Middle", "High"))]
#Green Consciousness
dt_ap[,green_con:= cut(green_con,3,include.lowest=TRUE,
labels=c("Low", "Middle", "High"))]
#Consumer Innovativeness
dt_ap[,con_inno:= cut(con_inno,3,include.lowest=TRUE,
labels=c("Low", "Middle", "High"))]
#Social/Ethical
dt_ap[,soc_eth:= cut(soc_eth,3,include.lowest=TRUE,
labels=c("Low", "Middle", "High"))]
#Aes/fun
dt_ap[,aes_fun:= cut(aes_fun,3,include.lowest=TRUE,
labels=c("Low", "Middle", "High"))]
#functional
dt_ap[,functional:= cut(functional,3,include.lowest=TRUE,
labels=c("Low", "Middle", "High"))]
#symbolic
dt_ap[,symbolic:= cut(symbolic,3,include.lowest=TRUE,
labels=c("Low", "Middle", "High"))]
# financial
dt_ap[,financial:= as.factor(ifelse(dt_ap[,"financial"]>3, "High", "Low"))]
colnames(dt_ap)
dt_ap <- dt_ap %>%
mutate_if(is.numeric, as.factor)
rules <- apriori(dt_ap,
parameter = list(supp = 0.5, conf = 0.3, maxlen = 4))
inspect((sort(rules, by = "confidence"))[1:20])
top10subRules <- head(rules, n = 10, by = "confidence")
inspect((sort(rules, by = "confidence"))[1:20])
rules <- apriori(dt_ap,
parameter = list(supp = 0.2, conf = 0.3, maxlen = 4),
appearance = list(default="lhs", rhs = c("Q41.Sex=Male")))
rules <- apriori(dt_ap,
parameter = list(supp = 0.2, conf = 0.3, maxlen = 4),
appearance = list(default="lhs", rhs = c("Q41.Sex=1")))
inspect((sort(rules, by = "confidence"))[1:20])
rules <- apriori(dt_ap,
parameter = list(supp = 0.5, conf = 0.3, maxlen = 4),
appearance = list(default="lhs", rhs = c("Q41.Sex=2")))
rules <- apriori(dt_ap,
parameter = list(supp = 0.55, conf = 0.3, maxlen = 4),
appearance = list(default="lhs", rhs = c("Q41.Sex=2")))
rules <- apriori(dt_ap,
parameter = list(supp = 0.5, conf = 0.3, maxlen = 4),
appearance = list(default="lhs", rhs = c("Q41.Sex=2")))
inspect((sort(rules, by = "confidence"))[1:20])
#drop edu lev, age, employ
dt_ap <- dt_ap[,-c(64,67,68)]
rules <- apriori(dt_ap,
parameter = list(supp = 0.5, conf = 0.3, maxlen = 4))
inspect((sort(rules, by = "confidence"))[1:20])
install.packages(c("broom", "cli", "dendextend", "forcats", "nloptr", "rlang", "xlsx"))
## Junjie Wu
## China Survey Analysis
rm(list = ls())
pacman::p_load(data.table, bit64, openxlsx, haven, dplyr, corrplot, zoo,
matrixStats, plotly, DAAG,PerformanceAnalytics,
BiocManager, ISLR, tree, rpart,rpart.plot, arsenal, rattle,
RColorBrewer, statsr, tidyverse, arules)
setwd('~/Desktop/GLIS Research/GLIS_research_project/data')
###################### missing value imputation #####################
# dt <- fread('cleaned_01_16_cn.csv')
# #knn
# if(exists(".Random.seed")) rm(.Random.seed)
#
# dt_imputed <- impute.knn(as.matrix(dt[,c(2:30, 38:69, 71)]))
# dt_q30 <- dt[,c(1,31:37)]
#
# dt_imputed <- data.table(dt_imputed$data)
# dt_imputed$V1 <- seq.int(nrow(dt_imputed))
#
# dt_merge <- merge(dt_imputed, dt_q30, by = 'V1')
#
# dt_merged <- dt_merge[,c(1:30,64:70,31:63)]
#
# write.csv(dt_merged, 'knn_imputed_cn_data.csv', row.names = F)
# ####################################################################
dt <- read.csv('knn_imputed_cn_data.csv')[,-1]
round_df <- function(x, digits) {
# round all numeric variables
# x: data frame
# digits: number of digits to round
numeric_columns <- sapply(x, mode) == 'numeric'
x[numeric_columns] <-  round(x[numeric_columns], digits)
x
}
dt <- data.table(round_df(dt, 0))
# sustainable value
dt[, `:=`(sus_val = rowSums(.SD, na.rm=T)), .SDcols=c(41,49:56)]
# aesthetic values
dt[, aes_val := rowSums(.SD, na.rm=T), .SDcols=c(42:43)]
#Green Consciousness
dt[, green_con := rowSums(.SD, na.rm=T), .SDcols=c(1:5)]
#Consumer Innovativeness
dt[, con_inno := rowSums(.SD, na.rm=T), .SDcols=c(50:56, 58:62)]
#Social/Ethical
dt[, soc_eth := rowSums(.SD, na.rm=T), .SDcols=c(53:56)]
#Aes/fun
dt[, aes_fun := rowSums(.SD, na.rm=T), .SDcols=c(37,39,40)]
#functional
dt[, functional := rowSums(.SD, na.rm=T), .SDcols=c(38, 47)]
#symbolic
dt[, symbolic := rowSums(.SD, na.rm=T), .SDcols=c(44,46)]
# financial
dt[, financial := rowSums(.SD, na.rm=T), .SDcols=c(45)]
View(dt)
summary(dt)
summary(dt)
summary(dt)
mean(dt)
colMeans(dt)
sort(colMeans(dt))
colname(dt)
colnames(dt)
ort(colMeans(dt[,30:56]), )
sort(colMeans(dt[,30:56]), decreasing = T)
setwd('~/Desktop/GLIS Research/GLIS_research_project/data')
####################################################################
dt <- read.csv('knn_imputed_cn_data.csv')[,-1]
round_df <- function(x, digits) {
# round all numeric variables
# x: data frame
# digits: number of digits to round
numeric_columns <- sapply(x, mode) == 'numeric'
x[numeric_columns] <-  round(x[numeric_columns], digits)
x
}
dt <- data.table(round_df(dt, 0))
write_sav(dt, '~/Desktop/final_cn_data.sav')
## Junjie Wu
## China Survey Analysis
rm(list = ls())
pacman::p_load(data.table, bit64, openxlsx, haven, dplyr, corrplot, zoo,
matrixStats, plotly, DAAG,PerformanceAnalytics,
BiocManager, ISLR, tree, rpart,rpart.plot, arsenal, rattle,
RColorBrewer, statsr, tidyverse, arules)
setwd('~/Desktop/GLIS Research/GLIS_research_project/data')
###################### missing value imputation #####################
# dt <- fread('cleaned_01_16_cn.csv')
# #knn
# if(exists(".Random.seed")) rm(.Random.seed)
#
# dt_imputed <- impute.knn(as.matrix(dt[,c(2:30, 38:69, 71)]))
# dt_q30 <- dt[,c(1,31:37)]
#
# dt_imputed <- data.table(dt_imputed$data)
# dt_imputed$V1 <- seq.int(nrow(dt_imputed))
#
# dt_merge <- merge(dt_imputed, dt_q30, by = 'V1')
#
# dt_merged <- dt_merge[,c(1:30,64:70,31:63)]
#
# write.csv(dt_merged, 'knn_imputed_cn_data.csv', row.names = F)
####################################################################
dt <- read.csv('knn_imputed_cn_data.csv')[,-1]
round_df <- function(x, digits) {
# round all numeric variables
# x: data frame
# digits: number of digits to round
numeric_columns <- sapply(x, mode) == 'numeric'
x[numeric_columns] <-  round(x[numeric_columns], digits)
x
}
dt <- data.table(round_df(dt, 0))
# sustainable value
dt[, `:=`(sus_val = rowSums(.SD, na.rm=T)), .SDcols=c(41,49:56)]
# aesthetic values
dt[, aes_val := rowSums(.SD, na.rm=T), .SDcols=c(42:43)]
#Green Consciousness
dt[, green_con := rowSums(.SD, na.rm=T), .SDcols=c(1:5)]
#Consumer Innovativeness
dt[, con_inno := rowSums(.SD, na.rm=T), .SDcols=c(50:56, 58:62)]
#Social/Ethical
dt[, soc_eth := rowSums(.SD, na.rm=T), .SDcols=c(53:56)]
#Aes/fun
dt[, aes_fun := rowSums(.SD, na.rm=T), .SDcols=c(37,39,40)]
#functional
dt[, functional := rowSums(.SD, na.rm=T), .SDcols=c(38, 47)]
#symbolic
dt[, symbolic := rowSums(.SD, na.rm=T), .SDcols=c(44,46)]
# financial
dt[, financial := rowSums(.SD, na.rm=T), .SDcols=c(45)]
write.csv(dt, '~/Desktop/final_cn.csv')
rm(list = ls())
pacman::p_load(data.table, bit64, openxlsx, haven, dplyr, corrplot, zoo,
matrixStats, plotly, DAAG,PerformanceAnalytics,
BiocManager, ISLR, tree, rpart,rpart.plot, arsenal, rattle,
RColorBrewer, statsr, tidyverse, arules)
setwd('~/Desktop/GLIS Research/GLIS_research_project/data')
####################################################################
dt <- read.csv('knn_imputed_cn_data.csv')[,-1]
round_df <- function(x, digits) {
# round all numeric variables
# x: data frame
# digits: number of digits to round
numeric_columns <- sapply(x, mode) == 'numeric'
x[numeric_columns] <-  round(x[numeric_columns], digits)
x
}
dt <- data.table(round_df(dt, 0))
write.xlsx(dt, '~/Desktops/final_cn.xlsx')
write.xlsx(dt, '~/Desktop/final_cn.xlsx')
install.packages('ZillowR')
library(ZillowR)
devtools::install_github('fascinatingfingers/ZillowR')
library(ZillowR)
set_zillow_web_service_id('X1-ZWz1ho8wugkpaj_34dhf')
library(ZillowR)
set_zillow_web_service_id('X1-ZWz1ho8wugkpaj_34dhf')
library(ZillowR)
set_zillow_web_service_id('X1-ZWz1ho8wugkpaj_34dhf')
GetMonthlyPayments(price = 300000L)
set_zillow_web_service_id('X1-ZWz1ho8wugkpaj_34dhf')
library(data.table)
fread('~/Downloads/kc_house_data.csv')
dt <- fread('~/Downloads/kc_house_data.csv')
head(dt)
dt <- fread('~/Downloads/Real_Estate_Sales_2001-2017.csv')
head(dt)
dt <- fread('~/Downloads/temp_3233391658917178445.csv')
dt <- fread('~/Downloads/5bbe6c55-bce6-4edb-9d04-68edeb6bf7b1.csv')
install.packages("tensorflow")
install.packages(c("covr", "DAAG", "deSolve", "dplyr", "foreign", "fs", "ggplot2", "glue", "lava", "lifecycle", "nlme", "nloptr", "plyr", "quantmod", "reticulate", "rlang", "roxygen2", "shiny", "survival", "testthat", "tidytext", "vcd", "vctrs", "xml2"))
rm(list = ls())
pacman::p_load(data.table, bit64, openxlsx, haven, dplyr, corrplot, zoo,
matrixStats, plotly, DAAG,PerformanceAnalytics,
BiocManager, ISLR, tree, rpart,rpart.plot, arsenal, rattle,
RColorBrewer, statsr, tidyverse, arules)
setwd('~/Desktop/GLIS Research/GLIS_research_project/data')
####################################################################
dt <- read.csv('knn_imputed_cn_data.csv')[,-1]
round_df <- function(x, digits) {
# round all numeric variables
# x: data frame
# digits: number of digits to round
numeric_columns <- sapply(x, mode) == 'numeric'
x[numeric_columns] <-  round(x[numeric_columns], digits)
x
}
dt <- data.table(round_df(dt, 0))
# sustainable value
dt[, `:=`(sus_val = rowSums(.SD, na.rm=T)), .SDcols=c(41,49:56)]
# aesthetic values
dt[, aes_val := rowSums(.SD, na.rm=T), .SDcols=c(42:43)]
#Green Consciousness
dt[, green_con := rowSums(.SD, na.rm=T), .SDcols=c(1:5)]
#Consumer Innovativeness
dt[, con_inno := rowSums(.SD, na.rm=T), .SDcols=c(50:56, 58:62)]
#Social/Ethical
dt[, soc_eth := rowSums(.SD, na.rm=T), .SDcols=c(53:56)]
#Aes/fun
dt[, aes_fun := rowSums(.SD, na.rm=T), .SDcols=c(37,39,40)]
#functional
dt[, functional := rowSums(.SD, na.rm=T), .SDcols=c(38, 47)]
#symbolic
dt[, symbolic := rowSums(.SD, na.rm=T), .SDcols=c(44,46)]
# financial
dt[, financial := rowSums(.SD, na.rm=T), .SDcols=c(45)]
######################### scatter plot function: ggplotRegression #########################
ggplotRegression <- function (fit) {
require(ggplot2)
ggplot(fit$model, aes_string(x = names(fit$model)[2], y = names(fit$model)[1])) +
geom_point() +
stat_smooth(method = "lm", col = "red") +
labs(title = paste("Adj R2 = ",signif(summary(fit)$adj.r.squared, 5),
"Intercept =",signif(fit$coef[[1]],5 ),
" Slope =",signif(fit$coef[[2]], 5),
" P =",signif(summary(fit)$coef[2,4], 5)))
}
dt_mean <- sapply(dt[,38:57], mean, na.rm=TRUE)
summary(dt)
sort(dt_mean)
table_one <- tableby(~.,dt)
summary(table_one,text=TRUE)
dt_individual <- dt[, c(65,41,49:56,42:43)]
dt_individual <- dt_individual[Q41.Sex < 3,]
dt_individual$Q41.Sex <- as.factor(ifelse(dt_individual$Q41.Sex<=1, "Male", "Female"))
dt_aes_sus  <- dt[, c(65,70,71)]
dt_aes_sus <- dt_aes_sus[Q41.Sex < 3,]
dt_aes_sus$Q41.Sex <- as.factor(ifelse(dt_aes_sus$Q41.Sex<=1, "Male", "Female"))
## Junjie Wu
## China Survey Analysis
rm(list = ls())
pacman::p_load(data.table, bit64, openxlsx, haven, dplyr, corrplot, zoo,
matrixStats, plotly, DAAG,PerformanceAnalytics,
BiocManager, ISLR, tree, rpart,rpart.plot, arsenal, rattle,
RColorBrewer, statsr, tidyverse, arules)
setwd('~/Desktop/GLIS Research/GLIS_research_project/data')
###################### missing value imputation #####################
# dt <- fread('cleaned_01_16_cn.csv')
# #knn
# if(exists(".Random.seed")) rm(.Random.seed)
#
# dt_imputed <- impute.knn(as.matrix(dt[,c(2:30, 38:69, 71)]))
# dt_q30 <- dt[,c(1,31:37)]
#
# dt_imputed <- data.table(dt_imputed$data)
# dt_imputed$V1 <- seq.int(nrow(dt_imputed))
#
# dt_merge <- merge(dt_imputed, dt_q30, by = 'V1')
#
# dt_merged <- dt_merge[,c(1:30,64:70,31:63)]
#
# write.csv(dt_merged, 'knn_imputed_cn_data.csv', row.names = F)
####################################################################
dt <- read.csv('knn_imputed_cn_data.csv')[,-1]
round_df <- function(x, digits) {
# round all numeric variables
# x: data frame
# digits: number of digits to round
numeric_columns <- sapply(x, mode) == 'numeric'
x[numeric_columns] <-  round(x[numeric_columns], digits)
x
}
dt <- data.table(round_df(dt, 0))
# sustainable value
dt[, `:=`(sus_val = rowSums(.SD, na.rm=T)), .SDcols=c(41,49:56)]
# aesthetic values
dt[, aes_val := rowSums(.SD, na.rm=T), .SDcols=c(42:43)]
#Green Consciousness
dt[, green_con := rowSums(.SD, na.rm=T), .SDcols=c(1:5)]
#Consumer Innovativeness
dt[, con_inno := rowSums(.SD, na.rm=T), .SDcols=c(50:56, 58:62)]
#Social/Ethical
dt[, soc_eth := rowSums(.SD, na.rm=T), .SDcols=c(53:56)]
#Aes/fun
dt[, aes_fun := rowSums(.SD, na.rm=T), .SDcols=c(37,39,40)]
#functional
dt[, functional := rowSums(.SD, na.rm=T), .SDcols=c(38, 47)]
#symbolic
dt[, symbolic := rowSums(.SD, na.rm=T), .SDcols=c(44,46)]
# financial
dt[, financial := rowSums(.SD, na.rm=T), .SDcols=c(45)]
######################### scatter plot function: ggplotRegression #########################
ggplotRegression <- function (fit) {
require(ggplot2)
ggplot(fit$model, aes_string(x = names(fit$model)[2], y = names(fit$model)[1])) +
geom_point() +
stat_smooth(method = "lm", col = "red") +
labs(title = paste("Adj R2 = ",signif(summary(fit)$adj.r.squared, 5),
"Intercept =",signif(fit$coef[[1]],5 ),
" Slope =",signif(fit$coef[[2]], 5),
" P =",signif(summary(fit)$coef[2,4], 5)))
}
#descriptive analysis
dt_mean <- sapply(dt[,38:57], mean, na.rm=TRUE)
summary(dt)
sort(dt_mean)
table_one <- tableby(~.,dt)
summary(table_one,text=TRUE)
#write.table(table_one, '../script/cn_preliminary_analysis/cn_h1.csv')
################################################################################
######################### Q1 ###############################
dt_individual <- dt[, c(65,41,49:56,42:43)]
dt_individual <- dt_individual[Q41.Sex < 3,]
dt_individual$Q41.Sex <- as.factor(ifelse(dt_individual$Q41.Sex<=1, "Male", "Female"))
#write.csv(dt_individual, '../script/cn_preliminary_analysis/cn_h1_ind.csv', row.names = F)
dt_aes_sus  <- dt[, c(65,70,71)]
dt_aes_sus <- dt_aes_sus[Q41.Sex < 3,]
dt_aes_sus$Q41.Sex <- as.factor(ifelse(dt_aes_sus$Q41.Sex<=1, "Male", "Female"))
#write.csv(dt_aes_sus, '../script/cn_preliminary_analysis/cn_h1_sum.csv', row.names = F)
rtree.dt_a = rpart(Q41.Sex ~ ., data=train, method = 'class',   minsplit = 2,
minbucket = 1,
cp = 0.008)
summary(rtree.dt_a)
dt_a <- dt_individual
## 75% of the sample size
smp_size <- floor(0.75 * nrow(dt_a))
## set the seed to make your partition reproducible
set.seed(123)
train_ind <- sample(seq_len(nrow(dt_a)), size = smp_size)
train <- dt_a[train_ind, ]
test <- dt_a[-train_ind, ]
rtree.dt_a = rpart(Q41.Sex ~ ., data=train, method = 'class',   minsplit = 2,
minbucket = 1,
cp = 0.008)
summary(rtree.dt_a)
# Plot the tree using prp command defined in rpart.plot package
fancyRpartPlot(rtree.dt_a)
t_pred = predict(rtree.dt_a,test,type="class")
confMat <- table(test$Q41.Sex,t_pred)
accuracy <- sum(diag(confMat))/sum(confMat)
mean(test$Q41.Sex == t_pred)
summary(rtree.dt_a)
tree.dt_a = tree(Q41.Sex~., data=dt_a)
summary(tree.dt_a)
plot(tree.dt_a)
text(tree.dt_a, pretty = 0)
tree.pred = predict(tree.dt_a, dt_a[-train_ind, ], type="class")
with(dt_a[-train_ind,], table(tree.pred, Q41.Sex))
rtree.dt_a = rpart(Q41.Sex ~ ., data=train, method = 'class',   minsplit = 2,
minbucket = 1,
cp = 0.008)
summary(rtree.dt_a)
# Plot the tree using prp command defined in rpart.plot package
fancyRpartPlot(rtree.dt_a)
rm(list = ls())
pacman::p_load(data.table, bit64, openxlsx, haven, dplyr, corrplot, zoo,
matrixStats, plotly, DAAG,PerformanceAnalytics,
BiocManager, ISLR, tree, rpart,rpart.plot, arsenal, rattle,
RColorBrewer, statsr, tidyverse, arules)
setwd('~/Desktop/GLIS Research/GLIS_research_project/data')
####################################################################
dt <- read.csv('knn_imputed_cn_data.csv')[,-1]
round_df <- function(x, digits) {
# round all numeric variables
# x: data frame
# digits: number of digits to round
numeric_columns <- sapply(x, mode) == 'numeric'
x[numeric_columns] <-  round(x[numeric_columns], digits)
x
}
dt <- data.table(round_df(dt, 0))
# sustainable value
dt[, `:=`(sus_val = rowSums(.SD, na.rm=T)), .SDcols=c(41,49:56)]
# aesthetic values
dt[, aes_val := rowSums(.SD, na.rm=T), .SDcols=c(42:43)]
#Green Consciousness
dt[, green_con := rowSums(.SD, na.rm=T), .SDcols=c(1:5)]
#Consumer Innovativeness
dt[, con_inno := rowSums(.SD, na.rm=T), .SDcols=c(50:56, 58:62)]
#Social/Ethical
dt[, soc_eth := rowSums(.SD, na.rm=T), .SDcols=c(53:56)]
#Aes/fun
dt[, aes_fun := rowSums(.SD, na.rm=T), .SDcols=c(37,39,40)]
#functional
dt[, functional := rowSums(.SD, na.rm=T), .SDcols=c(38, 47)]
#symbolic
dt[, symbolic := rowSums(.SD, na.rm=T), .SDcols=c(44,46)]
# financial
dt[, financial := rowSums(.SD, na.rm=T), .SDcols=c(45)]
## Junjie Wu
## China Survey Analysis
rm(list = ls())
pacman::p_load(data.table, bit64, openxlsx, haven, dplyr, corrplot, zoo,
matrixStats, plotly, DAAG,PerformanceAnalytics,
BiocManager, ISLR, tree, rpart,rpart.plot, arsenal, rattle,
RColorBrewer, statsr, tidyverse, arules)
setwd('~/Desktop/GLIS Research/GLIS_research_project/data')
###################### missing value imputation #####################
# dt <- fread('cleaned_01_16_cn.csv')
# #knn
# if(exists(".Random.seed")) rm(.Random.seed)
#
# dt_imputed <- impute.knn(as.matrix(dt[,c(2:30, 38:69, 71)]))
# dt_q30 <- dt[,c(1,31:37)]
#
# dt_imputed <- data.table(dt_imputed$data)
# dt_imputed$V1 <- seq.int(nrow(dt_imputed))
#
# dt_merge <- merge(dt_imputed, dt_q30, by = 'V1')
#
# dt_merged <- dt_merge[,c(1:30,64:70,31:63)]
#
# write.csv(dt_merged, 'knn_imputed_cn_data.csv', row.names = F)
####################################################################
dt <- read.csv('knn_imputed_cn_data.csv')[,-1]
round_df <- function(x, digits) {
# round all numeric variables
# x: data frame
# digits: number of digits to round
numeric_columns <- sapply(x, mode) == 'numeric'
x[numeric_columns] <-  round(x[numeric_columns], digits)
x
}
dt <- data.table(round_df(dt, 0))
colnames(dt)
colnames(dt)[42:43]
colnames(dt)[41,49:56]
## Junjie Wu
## China Survey Analysis
rm(list = ls())
pacman::p_load(data.table, bit64, openxlsx, haven, dplyr, corrplot, zoo,
matrixStats, plotly, DAAG,PerformanceAnalytics,
BiocManager, ISLR, tree, rpart,rpart.plot, arsenal, rattle,
RColorBrewer, statsr, tidyverse, arules)
setwd('~/Desktop/GLIS Research/GLIS_research_project/data')
###################### missing value imputation #####################
# dt <- fread('cleaned_01_16_cn.csv')
# #knn
# if(exists(".Random.seed")) rm(.Random.seed)
#
# dt_imputed <- impute.knn(as.matrix(dt[,c(2:30, 38:69, 71)]))
# dt_q30 <- dt[,c(1,31:37)]
#
# dt_imputed <- data.table(dt_imputed$data)
# dt_imputed$V1 <- seq.int(nrow(dt_imputed))
#
# dt_merge <- merge(dt_imputed, dt_q30, by = 'V1')
#
# dt_merged <- dt_merge[,c(1:30,64:70,31:63)]
#
# write.csv(dt_merged, 'knn_imputed_cn_data.csv', row.names = F)
####################################################################
dt <- read.csv('knn_imputed_cn_data.csv')[,-1]
round_df <- function(x, digits) {
# round all numeric variables
# x: data frame
# digits: number of digits to round
numeric_columns <- sapply(x, mode) == 'numeric'
x[numeric_columns] <-  round(x[numeric_columns], digits)
x
}
dt <- data.table(round_df(dt, 0))
colnames(dt)[41,49:56]
colnames(dt)
colnames(dt)[c(41,49:56)]
