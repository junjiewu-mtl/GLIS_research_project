inspect((sort(rules, by = "confidence"))[1:20])
rules <- apriori(dt_ap,
parameter = list(supp = 0.2, conf = 0.35, maxlen = 4),
appearance = list(default="lhs", rhs = c("Q41.Sex=1")))
inspect((sort(rules, by = "confidence"))[1:20])
3
3
rules <- apriori(dt_ap,
parameter = list(supp = 0.3, conf = 0.3, maxlen = 4),
appearance = list(default="lhs", rhs = c("Q41.Sex=1")))
inspect((sort(rules, by = "confidence"))[1:20])
top10subRules <- head(rules, n = 10, by = "confidence")
rules <- apriori(dt_ap,
parameter = list(supp = 0.2, conf = 0.3, maxlen = 4),
appearance = list(default="lhs", rhs = c("Q41.Sex=1")))
inspect((sort(rules, by = "confidence"))[1:20])
top10subRules <- head(rules, n = 10, by = "confidence")
rules <- apriori(dt_ap,
parameter = list(supp = 0.2, conf = 0.3, maxlen = 4),
appearance = list(default="lhs", rhs = c("Q41.Sex=2")))
inspect((sort(rules, by = "confidence"))[1:20])
rm(list = ls())
pacman::p_load(data.table, bit64, openxlsx, haven, dplyr, corrplot, zoo,
matrixStats, plotly, DAAG,PerformanceAnalytics,
BiocManager, ISLR, tree, rpart,rpart.plot, arsenal, rattle,
RColorBrewer, statsr, tidyverse, arules)
setwd('~/Desktop/GLIS Research/GLIS_research_project/data')
# ####################################################################
dt <- read.csv('knn_imputed_cn_data.csv')[,-1]
round_df <- function(x, digits) {
# round all numeric variables
# x: data frame
# digits: number of digits to round
numeric_columns <- sapply(x, mode) == 'numeric'
x[numeric_columns] <-  round(x[numeric_columns], digits)
x
}
dt <- data.table(round_df(dt, 0))
# sustainable value
dt[, `:=`(sus_val = rowSums(.SD, na.rm=T)), .SDcols=c(41,49:56)]
# aesthetic values
dt[, aes_val := rowSums(.SD, na.rm=T), .SDcols=c(42:43)]
#Green Consciousness
dt[, green_con := rowSums(.SD, na.rm=T), .SDcols=c(1:5)]
#Consumer Innovativeness
dt[, con_inno := rowSums(.SD, na.rm=T), .SDcols=c(50:56, 58:62)]
#Social/Ethical
dt[, soc_eth := rowSums(.SD, na.rm=T), .SDcols=c(53:56)]
#Aes/fun
dt[, aes_fun := rowSums(.SD, na.rm=T), .SDcols=c(37,39,40)]
#fun
dt[, fun := rowSums(.SD, na.rm=T), .SDcols=c(38, 47)]
#symbolic
dt[, sym := rowSums(.SD, na.rm=T), .SDcols=c(44,46)]
# finanical
dt[, price := rowSums(.SD, na.rm=T), .SDcols=c(45)]
dt_ap <- dt
#Catagorized value into 3 levels
# sustainable value
dt_ap[,sus_val:= cut(sus_val,3,include.lowest=TRUE,
labels=c("Low", "Middle", "High"))]
# aesthetic values
dt_ap[,aes_val:= cut(aes_val,3,include.lowest=TRUE,
labels=c("Low", "Middle", "High"))]
#Green Consciousness
dt_ap[,green_con:= cut(green_con,3,include.lowest=TRUE,
labels=c("Low", "Middle", "High"))]
#Consumer Innovativeness
dt_ap[,con_inno:= cut(con_inno,3,include.lowest=TRUE,
labels=c("Low", "Middle", "High"))]
#Social/Ethical
dt_ap[,soc_eth:= cut(soc_eth,3,include.lowest=TRUE,
labels=c("Low", "Middle", "High"))]
#Aes/fun
dt_ap[,aes_fun:= cut(aes_fun,3,include.lowest=TRUE,
labels=c("Low", "Middle", "High"))]
#functional
dt_ap[,functional:= cut(fun,3,include.lowest=TRUE,
labels=c("Low", "Middle", "High"))]
#symbolic
dt_ap[,symbolic:= cut(sym,3,include.lowest=TRUE,
labels=c("Low", "Middle", "High"))]
# finanical
dt_ap[,price:= as.factor(ifelse(dt_ap[,"price"]>3, "High", "Low"))]
# Selected label value
dt_ap <- dt_ap[,c(63:68,70:78)]
dt_ap <- dt_ap %>%
mutate_if(is.numeric, as.factor)
rules <- apriori(dt_ap,
parameter = list(supp = 0.2, conf = 0.3, maxlen = 4),
appearance = list(default="lhs", rhs = c("Q41.Sex=2")))
inspect((sort(rules, by = "confidence"))[1:20])
rules <- apriori(dt_ap,
parameter = list(supp = 0.3, conf = 0.3, maxlen = 4),
appearance = list(default="lhs", rhs = c("Q41.Sex=2")))
inspect((sort(rules, by = "confidence"))[1:20])
rules <- apriori(dt_ap,
parameter = list(supp = 0.4, conf = 0.3, maxlen = 4),
appearance = list(default="lhs", rhs = c("Q41.Sex=2")))
inspect((sort(rules, by = "confidence"))[1:20])
rules <- apriori(dt_ap,
parameter = list(supp = 0.5, conf = 0.3, maxlen = 4),
appearance = list(default="lhs", rhs = c("Q41.Sex=2")))
inspect((sort(rules, by = "confidence"))[1:20])
inspect((sort(rules, by = "confidence"))[1:19])
dt_ap <- dt
#Catagorized value into 3 levels
# sustainable value
dt_ap[,sus_val:= cut(sus_val,3,include.lowest=TRUE,
labels=c("Low", "Middle", "High"))]
# aesthetic values
dt_ap[,aes_val:= cut(aes_val,3,include.lowest=TRUE,
labels=c("Low", "Middle", "High"))]
#Green Consciousness
dt_ap[,green_con:= cut(green_con,3,include.lowest=TRUE,
labels=c("Low", "Middle", "High"))]
#Consumer Innovativeness
dt_ap[,con_inno:= cut(con_inno,3,include.lowest=TRUE,
labels=c("Low", "Middle", "High"))]
#Social/Ethical
dt_ap[,soc_eth:= cut(soc_eth,3,include.lowest=TRUE,
labels=c("Low", "Middle", "High"))]
#Aes/fun
dt_ap[,aes_fun:= cut(aes_fun,3,include.lowest=TRUE,
labels=c("Low", "Middle", "High"))]
#functional
dt_ap[,functional:= cut(fun,3,include.lowest=TRUE,
labels=c("Low", "Middle", "High"))]
#symbolic
dt_ap[,symbolic:= cut(sym,3,include.lowest=TRUE,
labels=c("Low", "Middle", "High"))]
rm(list = ls())
pacman::p_load(data.table, bit64, openxlsx, haven, dplyr, corrplot, zoo,
matrixStats, plotly, DAAG,PerformanceAnalytics,
BiocManager, ISLR, tree, rpart,rpart.plot, arsenal, rattle,
RColorBrewer, statsr, tidyverse, arules)
setwd('~/Desktop/GLIS Research/GLIS_research_project/data')
# ####################################################################
dt <- read.csv('knn_imputed_cn_data.csv')[,-1]
round_df <- function(x, digits) {
# round all numeric variables
# x: data frame
# digits: number of digits to round
numeric_columns <- sapply(x, mode) == 'numeric'
x[numeric_columns] <-  round(x[numeric_columns], digits)
x
}
dt <- data.table(round_df(dt, 0))
# sustainable value
dt[, `:=`(sus_val = rowSums(.SD, na.rm=T)), .SDcols=c(41,49:56)]
# aesthetic values
dt[, aes_val := rowSums(.SD, na.rm=T), .SDcols=c(42:43)]
#Green Consciousness
dt[, green_con := rowSums(.SD, na.rm=T), .SDcols=c(1:5)]
#Consumer Innovativeness
dt[, con_inno := rowSums(.SD, na.rm=T), .SDcols=c(50:56, 58:62)]
#Social/Ethical
dt[, soc_eth := rowSums(.SD, na.rm=T), .SDcols=c(53:56)]
#Aes/fun
dt[, aes_fun := rowSums(.SD, na.rm=T), .SDcols=c(37,39,40)]
#fun
dt[, fun := rowSums(.SD, na.rm=T), .SDcols=c(38, 47)]
#symbolic
dt[, sym := rowSums(.SD, na.rm=T), .SDcols=c(44,46)]
# finanical
dt[, price := rowSums(.SD, na.rm=T), .SDcols=c(45)]
################### scatter plot function: ggplotRegression ###################
ggplotRegression <- function (fit) {
require(ggplot2)
ggplot(fit$model, aes_string(x = names(fit$model)[2], y = names(fit$model)[1])) +
geom_point() +
stat_smooth(method = "lm", col = "red") +
labs(title = paste("Adj R2 = ",signif(summary(fit)$adj.r.squared, 5),
"Intercept =",signif(fit$coef[[1]],5 ),
" Slope =",signif(fit$coef[[2]], 5),
" P =",signif(summary(fit)$coef[2,4], 5)))
}
dt_ap <- dt
#Catagorized value into 3 levels
# sustainable value
dt_ap[,sus_val:= cut(sus_val,3,include.lowest=TRUE,
labels=c("Low", "Middle", "High"))]
# aesthetic values
dt_ap[,aes_val:= cut(aes_val,3,include.lowest=TRUE,
labels=c("Low", "Middle", "High"))]
#Green Consciousness
dt_ap[,green_con:= cut(green_con,3,include.lowest=TRUE,
labels=c("Low", "Middle", "High"))]
#Consumer Innovativeness
dt_ap[,con_inno:= cut(con_inno,3,include.lowest=TRUE,
labels=c("Low", "Middle", "High"))]
#Social/Ethical
dt_ap[,soc_eth:= cut(soc_eth,3,include.lowest=TRUE,
labels=c("Low", "Middle", "High"))]
#Aes/fun
dt_ap[,aes_fun:= cut(aes_fun,3,include.lowest=TRUE,
labels=c("Low", "Middle", "High"))]
#functional
dt_ap[,functional:= cut(fun,3,include.lowest=TRUE,
labels=c("Low", "Middle", "High"))]
#symbolic
dt_ap[,symbolic:= cut(sym,3,include.lowest=TRUE,
labels=c("Low", "Middle", "High"))]
# finanical
dt_ap[,financial:= as.factor(ifelse(dt_ap[,"price"]>3, "High", "Low"))]
# Selected label value
dt_ap <- dt_ap[,c(63:68,70:78)]
dt_ap <- dt_ap %>%
mutate_if(is.numeric, as.factor)
rules <- apriori(dt_ap,
parameter = list(supp = 0.5, conf = 0.3, maxlen = 4),
appearance = list(default="lhs", rhs = c("Q41.Sex=2")))
inspect((sort(rules, by = "confidence"))[1:19])
inspect((sort(rules, by = "confidence"))[1:18])
rules <- apriori(dt_ap,
parameter = list(supp = 0.5, conf = 0.3, maxlen = 4),
appearance = list(default="lhs", rhs = c("Q41.Sex=1")))
inspect((sort(rules, by = "confidence"))[1:20])
rules <- apriori(dt_ap,
parameter = list(supp = 0.5, conf = 0.3, maxlen = 4),
appearance = list(default="lhs", rhs = c("Q41.Sex=1")))
rules <- apriori(dt_ap,
parameter = list(supp = 0.3, conf = 0.3, maxlen = 4),
appearance = list(default="lhs", rhs = c("Q41.Sex=1")))
rules <- apriori(dt_ap,
parameter = list(supp = 0.2.5, conf = 0.3, maxlen = 4),
appearance = list(default="lhs", rhs = c("Q41.Sex=1")))
inspect((sort(rules, by = "confidence"))[1:20])
rules <- apriori(dt_ap,
parameter = list(supp = 0.25, conf = 0.3, maxlen = 4),
appearance = list(default="lhs", rhs = c("Q41.Sex=1")))
inspect((sort(rules, by = "confidence"))[1:20])
rules <- apriori(dt_ap,
parameter = list(supp = 0.2, conf = 0.3, maxlen = 4),
appearance = list(default="lhs", rhs = c("Q41.Sex=1")))
inspect((sort(rules, by = "confidence"))[1:20])
rules <- apriori(dt_ap,
parameter = list(supp = 0.23, conf = 0.3, maxlen = 4),
appearance = list(default="lhs", rhs = c("Q41.Sex=1")))
inspect((sort(rules, by = "confidence"))[1:20])
parameter = list(supp = 0.23, conf = 0.3, maxlen = 4)
rules <- apriori(dt_ap,
parameter = list(supp = 0.5, conf = 0.3, maxlen = 4))
inspect((sort(rules, by = "confidence"))[1:20])
inspect((sort(rules, by = "confidence"))[1:20])
rm(list = ls())
pacman::p_load(data.table, bit64, openxlsx, haven, dplyr, corrplot, zoo,
matrixStats, plotly, DAAG,PerformanceAnalytics,
BiocManager, ISLR, tree, rpart,rpart.plot, arsenal, rattle,
RColorBrewer, statsr, tidyverse, arules)
setwd('~/Desktop/GLIS Research/GLIS_research_project/data')
setwd('~/Desktop/GLIS Research/GLIS_research_project/data')
# ####################################################################
dt <- read.csv('knn_imputed_cn_data.csv')[,-1]
round_df <- function(x, digits) {
# round all numeric variables
# x: data frame
# digits: number of digits to round
numeric_columns <- sapply(x, mode) == 'numeric'
x[numeric_columns] <-  round(x[numeric_columns], digits)
x
}
dt <- data.table(round_df(dt, 0))
# sustainable value
dt[, `:=`(sus_val = rowSums(.SD, na.rm=T)), .SDcols=c(41,49:56)]
# aesthetic values
dt[, aes_val := rowSums(.SD, na.rm=T), .SDcols=c(42:43)]
#Green Consciousness
dt[, green_con := rowSums(.SD, na.rm=T), .SDcols=c(1:5)]
#Consumer Innovativeness
dt[, con_inno := rowSums(.SD, na.rm=T), .SDcols=c(50:56, 58:62)]
#Social/Ethical
dt[, soc_eth := rowSums(.SD, na.rm=T), .SDcols=c(53:56)]
#Aes/fun
dt[, aes_fun := rowSums(.SD, na.rm=T), .SDcols=c(37,39,40)]
#fun
dt[, fun := rowSums(.SD, na.rm=T), .SDcols=c(38, 47)]
#symbolic
dt[, sym := rowSums(.SD, na.rm=T), .SDcols=c(44,46)]
# finanical
dt[, price := rowSums(.SD, na.rm=T), .SDcols=c(45)]
dt_ap <- dt
#Catagorized value into 3 levels
# sustainable value
dt_ap[,sus_val:= cut(sus_val,3,include.lowest=TRUE,
labels=c("Low", "Middle", "High"))]
# aesthetic values
dt_ap[,aes_val:= cut(aes_val,3,include.lowest=TRUE,
labels=c("Low", "Middle", "High"))]
#Green Consciousness
dt_ap[,green_con:= cut(green_con,3,include.lowest=TRUE,
labels=c("Low", "Middle", "High"))]
#Consumer Innovativeness
dt_ap[,con_inno:= cut(con_inno,3,include.lowest=TRUE,
labels=c("Low", "Middle", "High"))]
#Social/Ethical
dt_ap[,soc_eth:= cut(soc_eth,3,include.lowest=TRUE,
labels=c("Low", "Middle", "High"))]
#Aes/fun
dt_ap[,aes_fun:= cut(aes_fun,3,include.lowest=TRUE,
labels=c("Low", "Middle", "High"))]
#functional
dt_ap[,functional:= cut(fun,3,include.lowest=TRUE,
labels=c("Low", "Middle", "High"))]
#symbolic
dt_ap[,symbolic:= cut(sym,3,include.lowest=TRUE,
labels=c("Low", "Middle", "High"))]
# finanical
dt_ap[,financial:= as.factor(ifelse(dt_ap[,"price"]>3, "High", "Low"))]
colnames(dt_ap)
## Junjie Wu
## China Survey Analysis
rm(list = ls())
pacman::p_load(data.table, bit64, openxlsx, haven, dplyr, corrplot, zoo,
matrixStats, plotly, DAAG,PerformanceAnalytics,
BiocManager, ISLR, tree, rpart,rpart.plot, arsenal, rattle,
RColorBrewer, statsr, tidyverse, arules)
setwd('~/Desktop/GLIS Research/GLIS_research_project/data')
###################### missing value imputation #####################
# dt <- fread('cleaned_01_16_cn.csv')
# #knn
# if(exists(".Random.seed")) rm(.Random.seed)
#
# dt_imputed <- impute.knn(as.matrix(dt[,c(2:30, 38:69, 71)]))
# dt_q30 <- dt[,c(1,31:37)]
#
# dt_imputed <- data.table(dt_imputed$data)
# dt_imputed$V1 <- seq.int(nrow(dt_imputed))
#
# dt_merge <- merge(dt_imputed, dt_q30, by = 'V1')
#
# dt_merged <- dt_merge[,c(1:30,64:70,31:63)]
#
# write.csv(dt_merged, 'knn_imputed_cn_data.csv', row.names = F)
# ####################################################################
dt <- read.csv('knn_imputed_cn_data.csv')[,-1]
round_df <- function(x, digits) {
# round all numeric variables
# x: data frame
# digits: number of digits to round
numeric_columns <- sapply(x, mode) == 'numeric'
x[numeric_columns] <-  round(x[numeric_columns], digits)
x
}
dt <- data.table(round_df(dt, 0))
# sustainable value
dt[, `:=`(sus_val = rowSums(.SD, na.rm=T)), .SDcols=c(41,49:56)]
# aesthetic values
dt[, aes_val := rowSums(.SD, na.rm=T), .SDcols=c(42:43)]
#Green Consciousness
dt[, green_con := rowSums(.SD, na.rm=T), .SDcols=c(1:5)]
#Consumer Innovativeness
dt[, con_inno := rowSums(.SD, na.rm=T), .SDcols=c(50:56, 58:62)]
#Social/Ethical
dt[, soc_eth := rowSums(.SD, na.rm=T), .SDcols=c(53:56)]
#Aes/fun
dt[, aes_fun := rowSums(.SD, na.rm=T), .SDcols=c(37,39,40)]
#functional
dt[, functional := rowSums(.SD, na.rm=T), .SDcols=c(38, 47)]
#symbolic
dt[, symbolic := rowSums(.SD, na.rm=T), .SDcols=c(44,46)]
# finanical
dt[, finanical := rowSums(.SD, na.rm=T), .SDcols=c(45)]
dt_ap <- dt
#Catagorized value into 3 levels
# sustainable value
dt_ap[,sus_val:= cut(sus_val,3,include.lowest=TRUE,
labels=c("Low", "Middle", "High"))]
# aesthetic values
dt_ap[,aes_val:= cut(aes_val,3,include.lowest=TRUE,
labels=c("Low", "Middle", "High"))]
#Green Consciousness
dt_ap[,green_con:= cut(green_con,3,include.lowest=TRUE,
labels=c("Low", "Middle", "High"))]
#Consumer Innovativeness
dt_ap[,con_inno:= cut(con_inno,3,include.lowest=TRUE,
labels=c("Low", "Middle", "High"))]
#Social/Ethical
dt_ap[,soc_eth:= cut(soc_eth,3,include.lowest=TRUE,
labels=c("Low", "Middle", "High"))]
#Aes/fun
dt_ap[,aes_fun:= cut(aes_fun,3,include.lowest=TRUE,
labels=c("Low", "Middle", "High"))]
#functional
dt_ap[,functional:= cut(fun,3,include.lowest=TRUE,
labels=c("Low", "Middle", "High"))]
#functional
dt_ap[,functional:= cut(functional,3,include.lowest=TRUE,
labels=c("Low", "Middle", "High"))]
#symbolic
dt_ap[,symbolic:= cut(symbolic,3,include.lowest=TRUE,
labels=c("Low", "Middle", "High"))]
# finanical
dt_ap[,financial:= as.factor(ifelse(dt_ap[,"financial"]>3, "High", "Low"))]
# finanical
dt_ap[,financial:= as.factor(ifelse(dt_ap[,"finanical"]>3, "High", "Low"))]
# finanical
dt_ap[,financial:= as.factor(ifelse(dt_ap[,"finanical"]>3, "High", "Low"))]
colnames(dt_ap)
colnames(dt_ap)
## Junjie Wu
## China Survey Analysis
rm(list = ls())
pacman::p_load(data.table, bit64, openxlsx, haven, dplyr, corrplot, zoo,
matrixStats, plotly, DAAG,PerformanceAnalytics,
BiocManager, ISLR, tree, rpart,rpart.plot, arsenal, rattle,
RColorBrewer, statsr, tidyverse, arules)
setwd('~/Desktop/GLIS Research/GLIS_research_project/data')
###################### missing value imputation #####################
# dt <- fread('cleaned_01_16_cn.csv')
# #knn
# if(exists(".Random.seed")) rm(.Random.seed)
#
# dt_imputed <- impute.knn(as.matrix(dt[,c(2:30, 38:69, 71)]))
# dt_q30 <- dt[,c(1,31:37)]
#
# dt_imputed <- data.table(dt_imputed$data)
# dt_imputed$V1 <- seq.int(nrow(dt_imputed))
#
# dt_merge <- merge(dt_imputed, dt_q30, by = 'V1')
#
# dt_merged <- dt_merge[,c(1:30,64:70,31:63)]
#
# write.csv(dt_merged, 'knn_imputed_cn_data.csv', row.names = F)
# ####################################################################
dt <- read.csv('knn_imputed_cn_data.csv')[,-1]
round_df <- function(x, digits) {
# round all numeric variables
# x: data frame
# digits: number of digits to round
numeric_columns <- sapply(x, mode) == 'numeric'
x[numeric_columns] <-  round(x[numeric_columns], digits)
x
}
dt <- data.table(round_df(dt, 0))
# sustainable value
dt[, `:=`(sus_val = rowSums(.SD, na.rm=T)), .SDcols=c(41,49:56)]
# aesthetic values
dt[, aes_val := rowSums(.SD, na.rm=T), .SDcols=c(42:43)]
#Green Consciousness
dt[, green_con := rowSums(.SD, na.rm=T), .SDcols=c(1:5)]
#Consumer Innovativeness
dt[, con_inno := rowSums(.SD, na.rm=T), .SDcols=c(50:56, 58:62)]
#Social/Ethical
dt[, soc_eth := rowSums(.SD, na.rm=T), .SDcols=c(53:56)]
#Aes/fun
dt[, aes_fun := rowSums(.SD, na.rm=T), .SDcols=c(37,39,40)]
#functional
dt[, functional := rowSums(.SD, na.rm=T), .SDcols=c(38, 47)]
#symbolic
dt[, symbolic := rowSums(.SD, na.rm=T), .SDcols=c(44,46)]
# financial
dt[, financial := rowSums(.SD, na.rm=T), .SDcols=c(45)]
dt_ap <- dt
### Association rules between appareal cues lables and demographic labels ###
#Catagorized value into 3 levels
# sustainable value
dt_ap[,sus_val:= cut(sus_val,3,include.lowest=TRUE,
labels=c("Low", "Middle", "High"))]
# aesthetic values
dt_ap[,aes_val:= cut(aes_val,3,include.lowest=TRUE,
labels=c("Low", "Middle", "High"))]
#Green Consciousness
dt_ap[,green_con:= cut(green_con,3,include.lowest=TRUE,
labels=c("Low", "Middle", "High"))]
#Consumer Innovativeness
dt_ap[,con_inno:= cut(con_inno,3,include.lowest=TRUE,
labels=c("Low", "Middle", "High"))]
#Social/Ethical
dt_ap[,soc_eth:= cut(soc_eth,3,include.lowest=TRUE,
labels=c("Low", "Middle", "High"))]
#Aes/fun
dt_ap[,aes_fun:= cut(aes_fun,3,include.lowest=TRUE,
labels=c("Low", "Middle", "High"))]
#functional
dt_ap[,functional:= cut(functional,3,include.lowest=TRUE,
labels=c("Low", "Middle", "High"))]
#symbolic
dt_ap[,symbolic:= cut(symbolic,3,include.lowest=TRUE,
labels=c("Low", "Middle", "High"))]
# financial
dt_ap[,financial:= as.factor(ifelse(dt_ap[,"financial"]>3, "High", "Low"))]
colnames(dt_ap)
dt_ap <- dt_ap %>%
mutate_if(is.numeric, as.factor)
rules <- apriori(dt_ap,
parameter = list(supp = 0.5, conf = 0.3, maxlen = 4))
inspect((sort(rules, by = "confidence"))[1:20])
top10subRules <- head(rules, n = 10, by = "confidence")
inspect((sort(rules, by = "confidence"))[1:20])
rules <- apriori(dt_ap,
parameter = list(supp = 0.2, conf = 0.3, maxlen = 4),
appearance = list(default="lhs", rhs = c("Q41.Sex=Male")))
rules <- apriori(dt_ap,
parameter = list(supp = 0.2, conf = 0.3, maxlen = 4),
appearance = list(default="lhs", rhs = c("Q41.Sex=1")))
inspect((sort(rules, by = "confidence"))[1:20])
rules <- apriori(dt_ap,
parameter = list(supp = 0.5, conf = 0.3, maxlen = 4),
appearance = list(default="lhs", rhs = c("Q41.Sex=2")))
rules <- apriori(dt_ap,
parameter = list(supp = 0.55, conf = 0.3, maxlen = 4),
appearance = list(default="lhs", rhs = c("Q41.Sex=2")))
rules <- apriori(dt_ap,
parameter = list(supp = 0.5, conf = 0.3, maxlen = 4),
appearance = list(default="lhs", rhs = c("Q41.Sex=2")))
inspect((sort(rules, by = "confidence"))[1:20])
#drop edu lev, age, employ
dt_ap <- dt_ap[,-c(64,67,68)]
rules <- apriori(dt_ap,
parameter = list(supp = 0.5, conf = 0.3, maxlen = 4))
inspect((sort(rules, by = "confidence"))[1:20])
